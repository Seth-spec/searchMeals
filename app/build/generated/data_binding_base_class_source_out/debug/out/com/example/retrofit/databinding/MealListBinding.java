// Generated by view binder compiler. Do not edit!
package com.example.retrofit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.retrofit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.zhanghai.android.materialratingbar.MaterialRatingBar;

public final class MealListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView mealImage;

  @NonNull
  public final TextView mealName;

  @NonNull
  public final TextView mealNuts;

  @NonNull
  public final TextView mealPrice;

  @NonNull
  public final MaterialRatingBar mealSpiciness;

  @NonNull
  public final TextView mealSpicy;

  @NonNull
  public final TextView mealVegetarian;

  private MealListBinding(@NonNull LinearLayout rootView, @NonNull ImageView mealImage,
      @NonNull TextView mealName, @NonNull TextView mealNuts, @NonNull TextView mealPrice,
      @NonNull MaterialRatingBar mealSpiciness, @NonNull TextView mealSpicy,
      @NonNull TextView mealVegetarian) {
    this.rootView = rootView;
    this.mealImage = mealImage;
    this.mealName = mealName;
    this.mealNuts = mealNuts;
    this.mealPrice = mealPrice;
    this.mealSpiciness = mealSpiciness;
    this.mealSpicy = mealSpicy;
    this.mealVegetarian = mealVegetarian;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MealListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MealListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.meal_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MealListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mealImage;
      ImageView mealImage = ViewBindings.findChildViewById(rootView, id);
      if (mealImage == null) {
        break missingId;
      }

      id = R.id.mealName;
      TextView mealName = ViewBindings.findChildViewById(rootView, id);
      if (mealName == null) {
        break missingId;
      }

      id = R.id.mealNuts;
      TextView mealNuts = ViewBindings.findChildViewById(rootView, id);
      if (mealNuts == null) {
        break missingId;
      }

      id = R.id.mealPrice;
      TextView mealPrice = ViewBindings.findChildViewById(rootView, id);
      if (mealPrice == null) {
        break missingId;
      }

      id = R.id.mealSpiciness;
      MaterialRatingBar mealSpiciness = ViewBindings.findChildViewById(rootView, id);
      if (mealSpiciness == null) {
        break missingId;
      }

      id = R.id.mealSpicy;
      TextView mealSpicy = ViewBindings.findChildViewById(rootView, id);
      if (mealSpicy == null) {
        break missingId;
      }

      id = R.id.mealVegetarian;
      TextView mealVegetarian = ViewBindings.findChildViewById(rootView, id);
      if (mealVegetarian == null) {
        break missingId;
      }

      return new MealListBinding((LinearLayout) rootView, mealImage, mealName, mealNuts, mealPrice,
          mealSpiciness, mealSpicy, mealVegetarian);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
